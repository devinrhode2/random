/* analytics-include.js - this transparently patchs google analytics to work perfectly everywhere in chrome extensions. 
 * YOU NEED TO INCLUDE IT EVERYWHERE*
 * 
 * See README.html for extra details on usage.
 * 
 * It detects and acts accordingly when it's included in a background page, with content scripts, or even with executeScript.
 * 
 * Send questions/problems/critiques on code to: DevinRhode2@gmail.com (put "analytics-include.js" in the title)
 */

window.analyticsInclude = function analyticsInclude(UA){
  'use strict';//steppin it up!
  //assure eventArrays are defined analyticsInclude
  if (typeof _gaq !== 'undefined') {
    window._gaq = _gaq;
  } else {
    window._gaq = [];
  }
  
  //nice wrapper
  window.event = function event(){
    if (typeof _gaq === 'undefined') {
      window._gaq = [];
    }
    var argsArray = [].slice.call(arguments);
    if (argsArray.length === 1) {
      _gaq.push(['_trackPageview', argsArray[0].replace(/\s/gi, '_')]);
    } else {
      _gaq.push(argsArray);
    }
  };
  
  var fail = function fail(message){
    alert(message);
    throw message;
  };
  
  var message = '';
  
  var analyticsIncludePortName = 'analyticsInclude';
  if (chrome.browserAction) {
    //background page or popup, inject the scripts normally!
    (function(d,t){
      window._gaq = [['_setAccount', UA]];
      var g = d.createElement(t);
      g.id = 'init_GA_for_' + nickname + ' (' + UA + ')';
      g.src = 'https://ssl.google-analytics.com/ga.js';
      document.documentElement.appendChild(g)
    }(document,'script'));
        
    chrome.extension.onConnect.addListener(function analyticsIncludeOnConnect(port) {
      if (port.name === analyticsIncludePortName) {
        port.onMessage.addListener(function(msg) {
          if (msg.bufferedPush) {
            _gaq.push(msg.bufferedPush);
          } else {
            message = 'unhandled message to analytics-include.js background receiver: ';
            alert(message + JSON.stringify(msg));
            console.error(message, msg);
          }
        });
      }
    });
  } else {
    //content script, setup api buffer
    var analyticsIncludePort = chrome.extension.connect({name: analyticsIncludePortName});
    window._gaq.push = function arrayPush(pushedArray){
      if (arguments.length !== 1) {
        message = 'too many arguments, only one is expected.';
        console.error(message + 'arguments:\n', arguments);
        alert(message);
        throw 'exited on: ' + message;
      }
      if (typeof pushedArray === 'function') {
        message = '_gaq.push doesnt accept a functions in content scripts.';
        console.error(message, pushedArray);
        return message;
      } else if (typeof pushedArray !== 'object') {
        fail('_kmq.push only accepts an object/array argument');
      }
      analyticsIncludePort.postMessage({bufferedPush: pushedArray});
    };
    //re-push events
    _gaq.forEach(function(event) {
      _gaq.push(event);
    });
  }  
};
if (typeof analyticsUA !== 'undefined') {
  analyticsInclude(analyticsUA);
} else if (typeof analytisID !== 'undefined') {
  analyticsInclude(analytisID);
}
