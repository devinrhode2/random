{
  "name": "analytics-include",
  "version": "1.0.4",
  "description": "Include everywhere in your chrome extension to patch an analytics api.",
  "author": {
    "name": "Devin Rhode",
    "email": "devinrhode2@gmail.com"
  },
  "main": "analytics-include.js",
  "preferGlobal": false,
  "dependencies": {},
  "devDependencies": {},
  "optionalDependencies": {},
  "readme": "<h1>KissMetrics in Chrome Extensions wi/kiss-include.js</h1>\n\n<p>To use KissMetrics in Chrome Extensions, we made a script that magically patches the JavaScript api for use everywhere within Chrome Extensions. You simply include it in your background page and content scripts, and call <code>_kmq.push</code> like normal.</p>\n\nDownload the patch script right from this repository, or do <code>npm install kiss-include</code>\n\n<h3>Important points</h3>\n<ul>\n  <li>\n    To use in <strong>content scripts</strong>, you will also \n    need to include it in the background page.\n  </li>\n</ul>\n\n<h3>Initialize</h3>\n<ul>\n  <li>\n    <h4>Asynchronously (recommended)</h4>\n    <p>\n      Setup this code, and being \n      <code>push</code>'ing to <code>_kmq:</code>\n    </p><pre><code>  if (typeof _kmq === 'undefined') {\n    window._kmq = [];\n  }\n  window._kmk = 'c168ad9f6287ggbcfe92a883fc3c8c0f904e7972';</code></pre>\n    <p>\n      At some later point, be sure to include kiss-include.js.\n      It will detect your _kmk id, and set itself up.\n    </p>\n  </li>\n  <li>\n    <h4>Directly</h4>\n    <p>Include kiss-include.js before this code in your extension, and then call <code>kissInclude</code> with your <code>_kmk</code> account id:</p>\n    <pre><code>  kissInclude('ioheiorfhaksjnaoiewhoasdhjf');</code></pre>\n  </li>\n  <li>\n    <h4>Setting a domain</h4>\n    <p>\n      As an extension, you might want to manually\n      specify a domain like so:\n    </p>\n    <pre><code>  window.KM_COOKIE_DOMAIN = 'www.mydomain.com';</code></pre>\n    <p>This code needs to be placed before the library is initialized.</p>  \n  </li>\n</ul>    \n\n<br>\n<br>\n<strong>Extra details on the script</strong>\n<p>Wherever you include the script, it detects it's environment and responds accordingly. This script alleviates the headache associated with chrome's isolated world's - you just use the JS API as defined in the docs.</p>\n<strong>Including in content scripts</strong>\n<p>To work in content scripts, you need to make sure it's also included in the background page</p>\n<pre><code>  //in you manifest.json:\n  \"content_scripts\": [\n     {\n        \"js\": [ \"YourScripts.js\", \"kiss-include.js\" ],\n        \"matches\": [ \"&lt;all_urls&gt;\" ],\n        \"run_at\": \"document_start\"\n     },\n  ],\n  </code></pre>\n\n\n<strong>Including in background page:</strong>\n<pre><code>  //in your background.html:\n  &lt;script src=\"kiss-include.js\"&gt;&lt;/script&gt;\n  </code>\n</pre>\n\n<p>If you include kiss-include.js after your code, you need to use asynchronous initialization. If you include it before your code, you'll need to use direct initialization.</p>\n\n",
  "_id": "analytics-include@1.0.4",
  "dist": {
    "shasum": "07a89834d98c20f2b331e727d0c246e51b1eb975"
  },
  "_from": "/Users/rangetutoring/Desktop/repos/analytics-include"
}
